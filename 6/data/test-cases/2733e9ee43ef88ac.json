{"uid":"2733e9ee43ef88ac","name":"test_pageNumber","fullName":"vizsgaremek_test.test_vizsgaremek.TestConduit#test_pageNumber","historyId":"bb904c0078212482b17cda0ca0f16b5f","time":{"start":1682378459424,"stop":1682378469769,"duration":10345},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_vizsgaremek.TestConduit object at 0x7f5a4ebc5ea0>\n\n    def test_pageNumber(self):\n        login(self.browser)\n>       for page in WebDriverWait(self.browser, varj).until(EC.presence_of_all_elements_located((By.XPATH, '//a[@class=\"page-link\"]'))):\n\nvizsgaremek_test/test_vizsgaremek.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"603cadec8d9a6e62da0576f0a63a4446\")>\nmethod = <function presence_of_all_elements_located.<locals>._predicate at 0x7f5a4d8ebf40>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1682378458336,"stop":1682378459423,"duration":1087},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1682378469779,"stop":1682378469836,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"vizsgaremek_test"},{"name":"suite","value":"test_vizsgaremek"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az216-976"},{"name":"thread","value":"3047-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"vizsgaremek_test.test_vizsgaremek"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"2733e9ee43ef88ac.json","parameterValues":[]}